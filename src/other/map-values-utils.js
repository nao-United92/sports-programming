/**
 * Creates an object with the same keys as `object` and values generated by
 * running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @param {Object} obj The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 */
export const mapValues = (obj, iteratee) => {
  const result = {};
  Object.keys(obj).forEach(key => {
    result[key] = iteratee(obj[key], key, obj);
  });
  return result;
};