/**
 * Creates an object with the same values as object and keys generated by running each own enumerable string keyed property of object thru iteratee. The iteratee is invoked with three arguments: (value, key, object).
 *
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 */
export function mapKeys(object, iteratee) {
  const result = {};
  if (object == null) {
    return result;
  }
  for (const key in object) {
    if (Object.prototype.hasOwnProperty.call(object, key)) {
      const newKey = iteratee(object[key], key, object);
      result[newKey] = object[key];
    }
  }
  return result;
}
